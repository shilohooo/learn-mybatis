<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    author: shiloh
    date: 2022/4/14 21:48
    description: 动态 SQL 示例 Mapper
 -->
<mapper namespace="org.shiloh.mapper.DynamicSqlMapper">
  <!--
    if 标签拼接动态 SQL，如果不传入 fuzzyName 参数，则 SQL 语句不会带有 and username like xxx 条件，如果传入的 fuzzyName为 null
    或者 空字符串，也不会拼接动态条件。

    choose、when、otherwise标签，用法类型 Java 的 switch 语句。
    当传入的 fuzzyUsername 参数不为 null 且不等于空字符串时，就按 username 模糊查询数据，否则就查询所有 username 不为 null 的数据

    where标签：在子元素返回任何内容的情况下才插入 where 子句，当第一个条件以 and 或 or 开头，where 标签也会将它们去除。
    使用该方式，无需再提前指定一个固定的 where 条件到 sql 语句中，然后在进行动态 sql 的拼接。

    trim标签：可以用于定制 where 标签的功能，在本例中，设置了前缀为 where，当 if 标签中的条件为 true 时，会在 sql 语句中拼接上 where 子句与条件，
    且会移除 prefixOverrides 属性匹配到的内容，在本例中会移除 and 或 or 关键字。
  -->
  <select id="findAllByDeptIdAndUsernameLike" parameterType="String" resultType="User">
    select id,
    username,
    password,
    sex,
    email,
    dept_id
    from t_user
    <!-- where dept_id = 1 -->
    <!--    <if test="fuzzyUsername != null and fuzzyUsername != ''">-->
    <!--      and username like concat('%', #{fuzzyUsername}, '%')-->
    <!--    </if>-->
    <!--    <choose>-->
    <!--      <when test="fuzzyUsername != null and fuzzyUsername != ''">-->
    <!--        and username like concat('%', #{fuzzyUsername}, '%')-->
    <!--      </when>-->
    <!--      <otherwise>-->
    <!--        and username is not null;-->
    <!--      </otherwise>-->
    <!--    </choose>-->
    <!--    <where>-->
    <!--      <if test="fuzzyUsername != null and fuzzyUsername != ''">-->
    <!--        username like concat('%', #{fuzzyUsername}, '%')-->
    <!--      </if>-->
    <!--    </where>-->
    <trim prefix="where" prefixOverrides="and|or">
      <if test="fuzzyUsername != null and fuzzyUsername != ''">
        and username like concat('%', #{fuzzyUsername}, '%')
      </if>
    </trim>
  </select>
</mapper>